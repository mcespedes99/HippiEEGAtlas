#---- begin snakebids boilerplate ----------------------------------------------

import snakebids
from snakebids import bids

configfile: workflow.source_path('../config/snakebids.yml')

# Get input wildcards
inputs = snakebids.generate_inputs(
    bids_dir=config["bids_dir"],
    pybids_inputs=config["pybids_inputs"],
    pybids_database_dir=config.get("pybids_db_dir"),
    pybids_reset_database=config.get("pybids_db_reset"),
    derivatives=config.get("derivatives", None),
    participant_label=config.get("participant_label", None),
    exclude_participant_label=config.get("exclude_participant_label", None),
    use_bids_inputs=True,
)


#this adds constraints to the bids naming
wildcard_constraints:  **snakebids.get_wildcard_constraints(config['pybids_inputs'])
print(inputs.path)

#---- end snakebids boilerplate ------------------------------------------------
rule epochs:
    input: 
        inputs.path['bold']
    output:
        bids(
            root=config['output_dir'],
            datatype='ieeg',
            suffix='epoch.edf',
            **inputs.wildcards['bold']
        )
    log:
        bids(
            root='/scratch/mcesped/HippiEEGAtlas/epochs/logs',
            suffix='epochs.log',
            **inputs.wildcards['bold']
        )
    script: '/scratch/mcesped/HippiEEGAtlas/epochs/hippieeg/code/epochs.py {input} {output}'

rule all:
    input:
        expand(
            expand(
                rules.epochs.output,
                allow_missing=True,
            ),
            zip,
            **inputs.zip_lists['bold']
        )
    default_target: True